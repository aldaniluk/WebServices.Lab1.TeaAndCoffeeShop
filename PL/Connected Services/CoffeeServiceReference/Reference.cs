//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.CoffeeServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CoffeeServiceReference.ICoffeeService")]
    public interface ICoffeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/GetAll", ReplyAction="http://tempuri.org/ICoffeeService/GetAllResponse")]
        BLL.Models.CoffeeBll[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/GetAll", ReplyAction="http://tempuri.org/ICoffeeService/GetAllResponse")]
        System.Threading.Tasks.Task<BLL.Models.CoffeeBll[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/GetById", ReplyAction="http://tempuri.org/ICoffeeService/GetByIdResponse")]
        BLL.Models.CoffeeBll GetById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/GetById", ReplyAction="http://tempuri.org/ICoffeeService/GetByIdResponse")]
        System.Threading.Tasks.Task<BLL.Models.CoffeeBll> GetByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Update", ReplyAction="http://tempuri.org/ICoffeeService/UpdateResponse")]
        void Update(BLL.Models.CoffeeBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Update", ReplyAction="http://tempuri.org/ICoffeeService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(BLL.Models.CoffeeBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Delete", ReplyAction="http://tempuri.org/ICoffeeService/DeleteResponse")]
        void Delete(BLL.Models.CoffeeBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Delete", ReplyAction="http://tempuri.org/ICoffeeService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(BLL.Models.CoffeeBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Create", ReplyAction="http://tempuri.org/ICoffeeService/CreateResponse")]
        void Create(BLL.Models.CoffeeBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeService/Create", ReplyAction="http://tempuri.org/ICoffeeService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(BLL.Models.CoffeeBll coffee);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoffeeServiceChannel : PL.CoffeeServiceReference.ICoffeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoffeeServiceClient : System.ServiceModel.ClientBase<PL.CoffeeServiceReference.ICoffeeService>, PL.CoffeeServiceReference.ICoffeeService {
        
        public CoffeeServiceClient() {
        }
        
        public CoffeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoffeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoffeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoffeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BLL.Models.CoffeeBll[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<BLL.Models.CoffeeBll[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public BLL.Models.CoffeeBll GetById(System.Guid id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<BLL.Models.CoffeeBll> GetByIdAsync(System.Guid id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public void Update(BLL.Models.CoffeeBll coffee) {
            base.Channel.Update(coffee);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(BLL.Models.CoffeeBll coffee) {
            return base.Channel.UpdateAsync(coffee);
        }
        
        public void Delete(BLL.Models.CoffeeBll coffee) {
            base.Channel.Delete(coffee);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(BLL.Models.CoffeeBll coffee) {
            return base.Channel.DeleteAsync(coffee);
        }
        
        public void Create(BLL.Models.CoffeeBll coffee) {
            base.Channel.Create(coffee);
        }
        
        public System.Threading.Tasks.Task CreateAsync(BLL.Models.CoffeeBll coffee) {
            return base.Channel.CreateAsync(coffee);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.TeaServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeaServiceReference.ITeaService")]
    public interface ITeaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/GetAll", ReplyAction="http://tempuri.org/ITeaService/GetAllResponse")]
        BLL.Models.TeaBll[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/GetAll", ReplyAction="http://tempuri.org/ITeaService/GetAllResponse")]
        System.Threading.Tasks.Task<BLL.Models.TeaBll[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/GetById", ReplyAction="http://tempuri.org/ITeaService/GetByIdResponse")]
        BLL.Models.TeaBll GetById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/GetById", ReplyAction="http://tempuri.org/ITeaService/GetByIdResponse")]
        System.Threading.Tasks.Task<BLL.Models.TeaBll> GetByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Update", ReplyAction="http://tempuri.org/ITeaService/UpdateResponse")]
        void Update(BLL.Models.TeaBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Update", ReplyAction="http://tempuri.org/ITeaService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(BLL.Models.TeaBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Delete", ReplyAction="http://tempuri.org/ITeaService/DeleteResponse")]
        void Delete(BLL.Models.TeaBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Delete", ReplyAction="http://tempuri.org/ITeaService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(BLL.Models.TeaBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Create", ReplyAction="http://tempuri.org/ITeaService/CreateResponse")]
        void Create(BLL.Models.TeaBll coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeaService/Create", ReplyAction="http://tempuri.org/ITeaService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(BLL.Models.TeaBll coffee);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeaServiceChannel : PL.TeaServiceReference.ITeaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeaServiceClient : System.ServiceModel.ClientBase<PL.TeaServiceReference.ITeaService>, PL.TeaServiceReference.ITeaService {
        
        public TeaServiceClient() {
        }
        
        public TeaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BLL.Models.TeaBll[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<BLL.Models.TeaBll[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public BLL.Models.TeaBll GetById(System.Guid id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<BLL.Models.TeaBll> GetByIdAsync(System.Guid id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public void Update(BLL.Models.TeaBll coffee) {
            base.Channel.Update(coffee);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(BLL.Models.TeaBll coffee) {
            return base.Channel.UpdateAsync(coffee);
        }
        
        public void Delete(BLL.Models.TeaBll coffee) {
            base.Channel.Delete(coffee);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(BLL.Models.TeaBll coffee) {
            return base.Channel.DeleteAsync(coffee);
        }
        
        public void Create(BLL.Models.TeaBll coffee) {
            base.Channel.Create(coffee);
        }
        
        public System.Threading.Tasks.Task CreateAsync(BLL.Models.TeaBll coffee) {
            return base.Channel.CreateAsync(coffee);
        }
    }
}
